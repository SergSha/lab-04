---
- name: Debian OS
  block:

  - name: Install additional packages for iscsi-initiator
    ansible.builtin.apt:
      name:
        - open-iscsi
        - device-mapper-multipath
      state: present

  when: ansible_os_family == "Debian"

- name: Redhat OS
  block:

  # dnf install epel-release -y
  - name: Install epel-release
    ansible.builtin.dnf:
      name:
        - epel-release
      state: present

  # dnf install iscsi-initiator-utils gfs2-utils lvm2-cluster
  - name: Install all packages
    ansible.builtin.dnf:
      name:
        #- iscsi-initiator-utils
        #- device-mapper-multipath
        - python3-cryptography
        - setools-console
        - libsemanage-python3
        - policycoreutils-python3
        - pcs
        - pacemaker
        - fence-agents-all
        - corosync
        - dlm
        - lvm2
        - lvm2-lockd
        - gfs2-utils
      state: present
      #enablerepo: highavailability # for almalinux 9
      enablerepo: ha,appstream,resilientstorage # ha for almalinux 8, resilientstorage for dlm

  when: ansible_os_family == "RedHat"

# echo 'system_id_source = "uname"' >> /etc/lvm/lvm.conf
- name: echo 'use_lvmlockd = 1' >> /etc/lvm/lvm.conf
  ansible.builtin.lineinfile:
    path: /etc/lvm/lvm.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items: 
    - { regexp: "system_id_source =", line: "system_id_source = 'uname'" }
    - { regexp: "use_lvmlockd =", line: "use_lvmlockd = 1" }

#- name: Add to LVM Confifuration File (Filter)
#  lineinfile:
#    dest: "/etc/lvm/lvm.conf"
#    insertafter: 'devices {'
#    line: '{{ item }}'
#  with_items:
#    - 'global_filter=["a|/dev/mapper/otus.*|","a|/dev/mapper/mpath.*|","a|/dev/sd.*|","r|.*|"]'
#    - 'filter=["a|/dev/mapper/otus.*|","a|/dev/mapper/mpath.*|","a|/dev/sd.*|","r|.*|"]'

- name: Add to LVM Confifuration File (Filter)
  lineinfile:
    dest: "/etc/lvm/lvm.conf"
    insertafter: 'global {'
    line: "{{ item }}"
  with_items:
    - locking_type = 1

# mkdir /mnt/lvm_cluster_file0
# mkdir /mnt/lvm_cluster_block0
- name: Create directories for cluster mount
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items: 
    - /var/www


- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ ansible_hostname }}.{{ domain }}"

- name: Add my own IP address to /etc/hosts instead localhost
  ansible.builtin.replace:
    path: "/etc/hosts"
    regexp: '^127\.0\.0\.1(\s+){{ ansible_hostname }}(\s+){{ ansible_hostname }}.*'
    replace: "{{ ansible_host }} {{ ansible_hostname }}.{{ domain }} {{ ansible_hostname }}"

- name: Add backend-01 to /etc/hosts
  ansible.builtin.lineinfile:
    path: "/etc/hosts"
    state: present
    line: "{{ ip_address['backend-01'] }} backend-01.{{ domain }} backend-01"

- name: Add backend-02 to /etc/hosts
  ansible.builtin.lineinfile:
    path: "/etc/hosts"
    state: present
    line: "{{ ip_address['backend-02'] }} backend-02.{{ domain }} backend-02"

#- name: Add backend-03 to /etc/hosts
#  ansible.builtin.lineinfile:
#    path: "/etc/hosts"
#    state: present
#    line: "{{ ip_address['backend-03'] }} backend-03.{{ domain }} backend-03"

- name: Redhat OS
  block:

  - name: Allow cluster processes on SELinux
    ansible.builtin.seboolean:
      name: daemons_enable_cluster_mode
      state: yes
      persistent: yes

  when: ansible_os_family == "RedHat"
  
- name: Enable and start pcsd service
  ansible.builtin.systemd:
    name: pcsd
    state: restarted
    enabled: true

- name: Set password for local hacluster user
  ansible.builtin.user:
    name: "hacluster"
    password: "{{ pcs_password | string | password_hash('sha512') }}" 
    state: present
    update_password: always
    create_home: yes
  notify: "restart pcsd"